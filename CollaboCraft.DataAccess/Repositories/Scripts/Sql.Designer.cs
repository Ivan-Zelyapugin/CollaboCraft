//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollaboCraft.DataAccess.Repositories.Scripts {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CollaboCraft.DataAccess.Repositories.Scripts.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ﻿update users
        ///set password_hash = @passwordHash
        ///where id = @id;.
        /// </summary>
        internal static string ChangePassword {
            get {
                return ResourceManager.GetString("ChangePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into blocks (text, sent_on, document_id, user_id)
        ///values (@Text, @SentOn, @DocumentId, @UserId)
        ///returning id;.
        /// </summary>
        internal static string CreateBlock {
            get {
                return ResourceManager.GetString("CreateBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into contacts (user_id, friend_id)
        ///values (@UserId, @FriendId);.
        /// </summary>
        internal static string CreateContract {
            get {
                return ResourceManager.GetString("CreateContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into document_participants (user_id, document_id, role)
        ///values (@UserId, @DocumentId, @Role);.
        /// </summary>
        internal static string CreateDocumentParticipant {
            get {
                return ResourceManager.GetString("CreateDocumentParticipant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into users (role, username, email, name, surname, password_hash, refresh_token, refresh_token_expired_after)
        ///values (@Role, @Username, @Email, @Name, @Surname, @PasswordHash, @RefreshToken, @RefreshTokenExpiredAfter)
        ///returning id;.
        /// </summary>
        internal static string CreateUser {
            get {
                return ResourceManager.GetString("CreateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into documents (name, creator_id)
        ///values (@Name, @CreatorId)
        ///returning id;.
        /// </summary>
        internal static string CreteDocument {
            get {
                return ResourceManager.GetString("CreteDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DELETE FROM document_participants WHERE document_id = @id;
        ///DELETE FROM blocks WHERE document_id = @id;
        ///DELETE FROM documents WHERE id = @id;.
        /// </summary>
        internal static string DeleteDocument {
            get {
                return ResourceManager.GetString("DeleteDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete
        ///from users
        ///where id = @id;.
        /// </summary>
        internal static string DeleteUser {
            get {
                return ResourceManager.GetString("DeleteUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update blocks
        ///set text      = @editedText,
        ///    edited_on = @editedOn
        ///where id = @id;.
        /// </summary>
        internal static string EditBlock {
            get {
                return ResourceManager.GetString("EditBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id        as Id,
        ///       text      as Text,
        ///       sent_on   as SentOn,
        ///       document_id   as DocumentId,
        ///       user_id   as UserId,
        ///       edited_on as EditedOn
        ///from blocks
        ///where document_id = @documentId
        ///  and sent_on &gt;= @from
        ///order by sent_on;.
        /// </summary>
        internal static string GetBlockByDocument {
            get {
                return ResourceManager.GetString("GetBlockByDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id        as Id,
        ///       text      as Text,
        ///       sent_on   as SentOn,
        ///       document_id   as DocumentId,
        ///       user_id   as UserId,
        ///       edited_on as EditedOn
        ///from blocks
        ///where id = @id;.
        /// </summary>
        internal static string GetBlockById {
            get {
                return ResourceManager.GetString("GetBlockById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id   as UserId,
        ///       friend_id as FriendId
        ///from contacts
        ///where user_id = @userId;.
        /// </summary>
        internal static string GetContractsByUserId {
            get {
                return ResourceManager.GetString("GetContractsByUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id         as Id,
        ///       name       as Name,
        ///       creator_id as CreatorId
        ///from documents
        ///where id = @id;.
        /// </summary>
        internal static string GetDocumentById {
            get {
                return ResourceManager.GetString("GetDocumentById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select u.id       as UserId,
        ///       u.username as Username,
        ///       u.name     as Name,
        ///       u.surname  as Surname,
        ///       cp.chat_id as DocumentId,
        ///       cp.role    as Role
        ///from document_participants cp
        ///         join users u on cp.user_id = u.id
        ///where cp.user_id = @userId
        ///  and cp.document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantFull {
            get {
                return ResourceManager.GetString("GetDocumentParticipantFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id as UserId,
        ///       document_id as DocumentId,
        ///       role    as Role
        ///from document_participants
        ///where document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantsByDocumentId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsByDocumentId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id as UserId,
        ///       document_id as DocumentId,
        ///       role    as Role
        ///from document_participants
        ///where user_id = @userId;.
        /// </summary>
        internal static string GetDocumentParticipantsByUserId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsByUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select u.id       as UserId,
        ///       u.username as Username,
        ///       u.name     as Name,
        ///       u.surname  as Surname,
        ///       cp.document_id as DocumentId,
        ///       cp.role    as Role
        ///from document_participants cp
        ///         join users u on cp.user_id = u.id
        ///where cp.document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantsFullByDocumentId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsFullByDocumentId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select c.id         as Id,
        ///       c.name       as Name,
        ///       c.creator_id as CreatorId
        ///from documents c
        ///         join document_participants cp on c.id = cp.document_id
        ///where cp.user_id = @userId;.
        /// </summary>
        internal static string GetDocumentsByUserId {
            get {
                return ResourceManager.GetString("GetDocumentsByUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       role                        as Role,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where id = @id;.
        /// </summary>
        internal static string GetUserById {
            get {
                return ResourceManager.GetString("GetUserById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       role                        as Role,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where (email = @login or username = @login)
        ///  and pas [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string GetUserByLoginAndPassword {
            get {
                return ResourceManager.GetString("GetUserByLoginAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       role                        as Role,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where refresh_token = @refreshToken;.
        /// </summary>
        internal static string GetUserByRefreshToken {
            get {
                return ResourceManager.GetString("GetUserByRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT role
        ///FROM document_participants
        ///WHERE user_id = @userId AND document_id = @documentId;
        ///.
        /// </summary>
        internal static string GetUserRoleInDocument {
            get {
                return ResourceManager.GetString("GetUserRoleInDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       role                        as Role,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users;.
        /// </summary>
        internal static string GetUsers {
            get {
                return ResourceManager.GetString("GetUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from blocks
        ///              where id = @id);.
        /// </summary>
        internal static string IsBlockExists {
            get {
                return ResourceManager.GetString("IsBlockExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ﻿select exists(select user_id
        ///              from contacts
        ///              where user_id = @userId
        ///                and friend_id = @friendId);.
        /// </summary>
        internal static string IsContractExists {
            get {
                return ResourceManager.GetString("IsContractExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from documents
        ///              where id = @id);.
        /// </summary>
        internal static string IsDocumentExists {
            get {
                return ResourceManager.GetString("IsDocumentExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select user_id
        ///              from document_participants
        ///              where user_id = @userId
        ///                and document_id = @documentId);.
        /// </summary>
        internal static string IsDocumentParticipantExists {
            get {
                return ResourceManager.GetString("IsDocumentParticipantExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where email = @email);.
        /// </summary>
        internal static string IsUserExistsByEmail {
            get {
                return ResourceManager.GetString("IsUserExistsByEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where id = @id);.
        /// </summary>
        internal static string IsUserExistsById {
            get {
                return ResourceManager.GetString("IsUserExistsById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where username = @username);.
        /// </summary>
        internal static string IsUserExistsByUsername {
            get {
                return ResourceManager.GetString("IsUserExistsByUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update users
        ///set refresh_token               = @refreshToken,
        ///    refresh_token_expired_after = @refreshTokenExpiredAfter
        ///where id = @Id;.
        /// </summary>
        internal static string UpdateRefreshToken {
            get {
                return ResourceManager.GetString("UpdateRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update users
        ///set username = coalesce(@Username, username),
        ///    email    = coalesce(@Email, email),
        ///    name     = coalesce(@Name, name),
        ///    surname  = coalesce(@Surname, surname)
        ///where id = @Id;.
        /// </summary>
        internal static string UpdateUser {
            get {
                return ResourceManager.GetString("UpdateUser", resourceCulture);
            }
        }
    }
}
